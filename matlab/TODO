To Do
------


<DONE>Investigate possible MEMM training bug: "end-of-page" is getting 0's 
for all of the "follows X" features.

<DONE>Change the all-in-one script to let you tweak the segmentation.

<DONE>Find a sample journal for Sam to try OCR on.
    ***TAGGED/jmlr/Cancedda03a

<DONE>Tar up the existing .jtag and .jlog files for JMLR.

<DONE>After that, merge all the figure caption/label pairs.
    <DONE>TAGGED:
        allwein
        antos
        Calif03a
        Cancedda
        CAruana
        Chan02a
        Chikering02b
        Christensen03a
        Crammer01a
        Crammer03a
    <DONE>TEST DATA:
        BAch02a
        Canon02a
        Chickering02a
        Collobert01a
        Crammer03n

<DONE>Fix the MEMM bug I found (skipping the end-of-page in training).

<DONE>Re-run the MEMM parts of the test sets, with the new bug fix.

<DONE>Finish the "Best Cuts" implementation of xycuts.

Draft a TOC for my thesis.

Buy a bar document scanner.

Look into detecting lines in text regions.

Look into inferring font size or line spacing from text regions.

<DONE>Fix up the demo.

Read Ben's thesis.

Consider second reader for thesis:
    -Rich Zemel
    -Brendon Frye
    -Aron Hertsmen
    -<Ron Becker>

Note MSC deadline: Jan 30th.

Think about writing an algorithm for re-flowing a page with dif't margins.

Think about an OCR pre-processor that blanks out the images, and says
something like "see figure1.jpg'.


Find error bars by randomly picking training and test cases for:
    Random articles:
        KNN
        LR
        MEMM
    Random pages:
        KNN
        LR
        MEMM


Consider trying to infer font size for each region, and using this as a
feature.

Check out OCR from http://rcat.utoronto.ca/

Implement MEMM
    <DONE>1. By adding booleans for previous class.
             <DONE>NOTE: Include a trailing "end-of-page" tag.
    2. By training a separate classifier for each previous class.

Implement CRF's

Think about inferring font size before doing segmentation, and using this.



