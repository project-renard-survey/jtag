To Do
------

----------------------------------------------------
Thesis TOC Gaps:
----------------
1. Merge-based algorithms
    1.1 Voronoi
    1.2 Best-Merge
    1.3 Learn-To-Merge

2. Combined Segment/Label Evaluation

3. Applications
    3.1 OCR Pre-Processing for searchable image-documents
    3.2 OCR Pre-Processing for compression and storage
    3.3 OCR Pre-Processing for HTML
    
----------------------------------------------------

Fix bottom-of-page bug and re-run 2-col reflow examples

Read Yann Lecunn papers

Implement the best-merge algorithm

Implement Voronoi Diagrams for best-merge

Test Voronoi Diagrams for best-merge

Improve the document re-flowing

Add extra feature for original Learn-To-Cut

Implement "optimizing" Learn-To-Cut data collection

Train "optimizing" Learn-To-Cut

Code "optimizing" Learn-To-Cut cutting algorithm

Test "optimizing" Learn-To-Cut cutting algorithm

Add classification features:
    Does it have both vertical AND horizontal lines?
    Some measure of font size.
    
Consider second reader for thesis:
    -Rich Zemel
    -Brendon Frye
    -Aron Hertsmen
    -<Ron Becker>

Find error bars by randomly picking training and test cases for:
    Random articles:
        KNN
        LR
        MEMM
    Random pages:
        KNN
        LR
        MEMM

Implement MEMM
    <DONE>1. By adding booleans for previous class.
             <DONE>NOTE: Include a trailing "end-of-page" tag.
    2. By training a separate classifier for each previous class.

Check for sources of over-fitting: distrubute each paper between the
test and training data sets




