To Do
------

<DONE>Create a memm_fn function so that memm can be called from JTAG.

<DONE>Change the sorting function so that instead of actually rearranging
the data, it just lists the correct indecies.

<DONE>Change the memm_train function to account for the new sorting method.

<DONE>Change the memm_predict function to account for the new sorting method.

<DONE>Change the memm_add_td_label_features function to account for the new
sorting method.

<DONE>Change the lr_fn to accept the jtag_file as a parameter.

<DONE>Change the knn_fn to accept the jtag_file as a parameter.

<DONE>Test the new lr_fn

<DONE>Test the new knn_fn

<DONE>Test the new memm_predict function

<DONE>Test the new memm_fn

<DONE>Test the new memm_train function

<DONE>Change run_all_features to accept the path to the pixels file, rather than
the pixels.

<DONE>Do something about the lack of a "figure" class label.  Guh, this will
take a while.

<DONE>Go through all the data to deal with the "figure" solution.
    <DONE>Training:
        <DONE>JMLR
            AllWein
            Antos02a
            Calif03a
            Cancedda03a
            Caruana03a
            Chan02a
            Chickering02b
            Christensen03a
            Crammer01a
            Crammer03a
        <DONE>NIPS2001
        <DONE>NIPS2002
    <DONE>Test:
        <DONE>JMLR
            Back02a
            Cannon02a
            Chickering02a
            Colbert01a
            Crammer03b
        <DONE>NIPS2001
        <DONE>NIPS2002


<DONE>Add features for:
    <DONE>-Is first region on page
    <DONE>-Is last region on page
    <DONE>-Fraction of the way down the page, in terms of region order
    <DONE>-Is first page
    <DONE>-Is last page
    <DONE>-In last 15% of document pages
    <DONE>-Fraction of the way through the document, in terms of page #

<DONE>Test page number based features

<DONE>Include page number based features in run_all_features

<DONE>Normalize the features in each data set before saving (do some research to make sure this is done right).

<DONE>Test that the normalization is:
    <DONE>1. Working.
    <DONE>2. Begin done in the right places.

<DONE>Re-extract all feature data.

<DONE>Retrain all classifiers:
    <DONE>lr
    <DONE>knn
    <DONE>memm

Retest all classifiers:
    <DONE>lr
    <DONE>knn
    memm

Train all classifiers without the "snapped" features.
Test all classifiers without the "snapped" features.

Train all classifiers with the "marks" features.
Test all classifiers with the "makrs" features.

Write a script that goes from a URL to a segmented image.

Test out LOO error for KNN on the training data.

Draft a TOC for my thesis.


Find error bars by randomly picking training and test cases for:
    Random articles:
        KNN
        LR
        MEMM
    Random pages:
        KNN
        LR
        MEMM


Figure out why the marks features are decreasing performance.

Consider trying to infer font size for each region, and using this as a
feature.

Check out OCR from http://rcat.utoronto.ca/

Implement MEMM
    <DONE>1. By adding booleans for previous class.
             <DONE>NOTE: Include a trailing "end-of-page" tag.
    2. By training a separate classifier for each previous class.

Implement CRF's

Think about inferring font size before doing segmentation, and using this.



